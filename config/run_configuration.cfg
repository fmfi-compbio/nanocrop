#########################
# GENERAL CONFIGURATION #
#########################
#
# This is a central configuration of sequencing-run monitoring.
# It provides a way to specify general parameters and basecaller parameters.
# In order to configure RAMPART monitoring pipeline, please refer to 
# SARS-CoV-2 protocol and run configuration.
# 
# Absolute path to directory containing MinKnow sequencing runs
seq_dir=/var/lib/minknow/data/

# Absolute path to basecaller input directory being watched for .fast5 files to be processed.
# If not set, input directory will be determined automatically during initialization.
input_dir=

# Absolute path to basecaller output directory; 
# (will be a RAMPART pipeline input directory at the same time).
output_dir=

# Relative path to directory containing RAMPART protocols
protocol_dir=../rampart/SARS-CoV-2/

# Relative path to RAMPART protocol configuration directory.
# If not set, user will be prompted with options during monitoring setup.
# Selected directory should contain 'run/' folder with RAMPART run_configuration.json
# and 'protocol' folder with RAMPART protocol.
protocol_conf_dir=

# Relative path to RAMPART annotations. RAMPART annotations are by default stored
# in 'annotations/' folder and are cleared before every RAMPART analysis.
# Annotations can be stored and used to display sequencing stats of a particular run
# without any computation necessary on the RAMPART side.
annotations_dir=

############################
# BASECALLER CONFIGURATION #
############################
#
# Number of CPU cores available for basecalling
cpu_cores=1

# The size of RNN model used for raw signal classification {48,56,64,80,96,256}
# Select small size for high speed and acceptable precision; maximum size for
# best precision but significantly reduced speed
network_type=48

# Default is 5 for network sizes {48,56,64,80,96} and 20 for network size {256}
beam_size=5

# Default is 0.1 for network sizes {48,56,64,80,96} and 0.0001 for network size {256}
beam_cut_threshold=0.1

# RAMPART pipeline can process both "fasta" and "fastq" formats
output_format="fastq"
